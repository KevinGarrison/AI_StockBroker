services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminadmin
      - DOCKER_INFLUXDB_INIT_ORG=HSAA
      - DOCKER_INFLUXDB_INIT_BUCKET=25s-cd-teamb
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=mySuperSecretToken123!
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=adminadmin
    depends_on:
      - influxdb
    restart: always

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"    # REST API
      - "6334:6334"    # gRPC
    volumes:
      - qdrant-data:/qdrant/storage
    restart: always

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always

  api-fetcher:
    build: ./backend/microservices/api_fetcher
    container_name: api-fetcher
    expose:
      - "8001"      
    restart: always
    ports:
      - "8001:8001"
  
  rag-chatbot:
    build: ./backend/microservices/rag_chatbot
    container_name: rag-chatbot
    expose:
      - "8002"
    depends_on:
      - qdrant
      - redis
    restart: always

  api-gateway:
    build: ./backend/microservices/api_gateway
    container_name: api-gateway
    expose:
      - "8000"
    depends_on:
      - influxdb
      - qdrant
      - redis
      - api-fetcher
      - rag-chatbot
      - forecasting
    restart: always

  # frontend:
  #   build: ./frontend
  #   container_name: tbd-frontend
  #   expose:
  #     - "4000"
  #   depends_on:
  #     - api-gateway
  #   restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx:ro
    depends_on:
      - api-gateway
      #- frontend
    restart: always

  forecasting:
    build: ./backend/microservices/forecasting
    container_name: forecasting
    expose:
      - "8003"
    depends_on:
      - influxdb
      - qdrant
      - redis
    restart: always

volumes:
  influxdb-data:
  grafana-data:
  qdrant-data:
  redis-data:
